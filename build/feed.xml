<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nanobox Blog</title>
  <subtitle>The inner-workings of the brains behind Nanobox</subtitle>
  <id>http://blog.nanobox.io/</id>
  <link href="http://blog.nanobox.io/"/>
  <link href="http://blog.nanobox.io/feed.xml" rel="self"/>
  <updated>2015-12-18T09:57:00-07:00</updated>
  <entry>
    <title>Holiday Gifts - New Features</title>
    <link rel="alternate" href="http://blog.nanobox.io/holiday-gifts-new-features/"/>
    <id>http://blog.nanobox.io/holiday-gifts-new-features/</id>
    <published>2015-12-18T09:57:00-07:00</published>
    <updated>2015-12-18T10:02:33-07:00</updated>
    <author>
      <name>Tyler Flint</name>
    </author>
    <content type="html">&lt;p&gt;As we prepare for the holidays, we’re excited to rollout a series of new features and enhancements. The past few weeks have been very good to Nanobox, and we’re anxiously nearing a beta release of Nanobox Desktop. We have a lot of functionality to cover, so let’s get right to it...&lt;/p&gt;

&lt;h2 id="zero-config-dev-mode"&gt;Zero Config Dev Mode&lt;/h2&gt;

&lt;h3 id="the-problem"&gt;The Problem&lt;/h3&gt;

&lt;p&gt;The &amp;#39;dev&amp;#39; container environment is auto-configured and the source code from the host is mounted into the dev container. As part of the environment preparation, engines may configure required services like Redis or Postgres. By design, nanobox will not alter the original source code on the host in any way. The usability challenge here is that, as a result of nanobox being nonintrusive, &amp;#39;nanobox dev&amp;#39; can&amp;#39;t auto-generate application configuration. If nanobox were to modify or generate application configuration files, those changes would be pushed back onto the original source, thus violating our strict nonintrusive contract.&lt;/p&gt;

&lt;p&gt;Essentially, an application using nanobox in dev mode will require the developer to modify the configuration manually in order to connect to the auto-generated services within nanobox. Not ideal.&lt;/p&gt;

&lt;h3 id="the-solution"&gt;The Solution&lt;/h3&gt;

&lt;p&gt;The solution is to allow the engine to generate the configuration files as it would in run mode. Then when the dev container is created, those generated configuration files are bind mounted on top of the original configuration files. This allows the application within the dev container to connect to the auto-generated services, without requiring manual intervention or modifying the source files. &lt;/p&gt;

&lt;p&gt;This behavior provides engine developers with powerful leverage to create zero-configuration development environments. In the coming months, users can expect to run &lt;code&gt;nanobox dev&lt;/code&gt; in their application source directory and have a fully-configured application without any modifications to the actual source code.&lt;/p&gt;

&lt;p&gt;This was a substantial, coordinated effort across multiple projects of various specialties contributed by &lt;a href="https://github.com/glinton"&gt;Greg (glinton)&lt;/a&gt;, &lt;a href="https://github.com/lyondhill"&gt;Lyon (lyondhill)&lt;/a&gt;, &lt;a href="https://github.com/sdomino"&gt;Domino (sdomino)&lt;/a&gt;, and &lt;a href="https://github.com/tylerflint"&gt;myself (tylerflint)&lt;/a&gt;. &lt;/p&gt;

&lt;h2 id="custom-dev-working-directory"&gt;Custom Dev Working Directory&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/lyondhill"&gt;Lyon&lt;/a&gt; has provided an enhancement to the &lt;code&gt;nanobox dev&lt;/code&gt; workflow by giving you the ability to specify a custom working directory the dev console session drops you into. This can be set by the application developer for a specific app, or transparently via the engine and is extremely helpful for languages like &lt;a href="https://golang.org/"&gt;go&lt;/a&gt;, which require the build process to occur within a specific directory. &lt;/p&gt;

&lt;p&gt;The configuration happens within the ‘dev’ node of the Boxfile, like this:&lt;/p&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;dev&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;working_dir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/code/some/nested/dir'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="tcp-udp-and-http-converge"&gt;TCP, UDP, and HTTP Converge&lt;/h2&gt;

&lt;p&gt;As the modern web evolves into mobile and IoT, applications are evolving away from the typical http request/response cycle. In fact, we’re seeing that many applications can handle multiple types of services within the same process. &lt;a href="http://nanopack.io/"&gt;Nanopack&lt;/a&gt; projects are examples of this; wherein the majority of these projects offer a tcp or udp service, but expose an http api for management. &lt;/p&gt;

&lt;p&gt;With ‘nanobox run’, which is the &lt;a href="https://nanobox.io/cloud/"&gt;Nanobox Cloud&lt;/a&gt; emulator, you can now natively support multiple services within the same process. Not only is this helpful when running your app locally within &lt;a href="https://desktop.nanobox.io/"&gt;Desktop&lt;/a&gt;, but also in how you will run your app in production with &lt;a href="https://nanobox.io/cloud/"&gt;Cloud&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Within the Boxfile, you can specify ports for each web service. To accomplish this functionality, port definitions have been expanded to support the protocol. Here’s an example of an app’s web service that depends on multiple protocols:&lt;/p&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;web1&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;tcp:9000&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;http:80:8080&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;https:443:8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As shown in this example, a port declaration follows this format: &lt;code&gt;&amp;lt;protocol&amp;gt;:&amp;lt;external port&amp;gt;:&amp;lt;internal port&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The external port is the publicly accessible port clients use. The internal port is the port your application listens on within the container. Again, special thanks to &lt;a href="https://github.com/lyondhill"&gt;Lyon&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="stand-alone-updater"&gt;Stand-Alone Updater&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/sdomino"&gt;Domino&lt;/a&gt; has been hard at work on a stand-alone updater binary. Unsuspecting bugs are still lurking, hard as we try. We will get them all eventually, but in the meantime, we’ve decided a stand-alone updater is prudent, as often times one of these unforeseen issues can (and have) impeded the ability to update the binary to a version where the bug is fixed. The update process will look the same, however, behind the scenes, an isolated child process will be launched to handle the update procedure. This will also bring auto-update capabilities to Windows!&lt;/p&gt;

&lt;h2 id="proxy-support"&gt;Proxy Support&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/glinton"&gt;Greg&lt;/a&gt; has brought proxy support to Nanobox Desktop, thanks to the insights and help of &lt;a href="https://github.com/mattn"&gt;Matt&lt;/a&gt; (the creator of &lt;a href="https://github.com/mattn/gom"&gt;Gom&lt;/a&gt;). The beauty of this implementation is that if your host is configured to use a proxy, Nanobox Desktop will detect it and configure both Docker and the nanobox daemon inside the VM to use the same proxy configuration.&lt;/p&gt;

&lt;h2 id="build-image-enhancements"&gt;Build Image Enhancements&lt;/h2&gt;

&lt;p&gt;Finally, &lt;a href="https://github.com/tylerflint"&gt;I’ve&lt;/a&gt; added a series of enhancements and bug fixes to the build process. Thanks in part to &lt;a href="https://github.com/jason-riddle"&gt;Jason&lt;/a&gt;, who discovered some Python environment inconsistencies, we were able to identify some foundational changes that provide a seamless dev workflow for Python and other virtual environments. &lt;/p&gt;

&lt;h2 id="happy-holidays"&gt;Happy Holidays&lt;/h2&gt;

&lt;p&gt;We’ve seen lots of movement in a short period of time, thanks to the &lt;a href="https://github.com/orgs/nanobox-io/people"&gt;dedicated team&lt;/a&gt; and to all those who have volunteered time and code to this effort. Stay tuned for some exciting announcements at the beginning of the year and a clear roadmap for &lt;a href="https://nanobox.io/cloud/"&gt;Cloud&lt;/a&gt; and &lt;a href="https://engines.nanobox.io/"&gt;engines&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy holidays!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>New Feature&amp;#58; Live Reloading</title>
    <link rel="alternate" href="http://blog.nanobox.io/new-feature-live-reloading/"/>
    <id>http://blog.nanobox.io/new-feature-live-reloading/</id>
    <published>2015-12-11T15:20:00-07:00</published>
    <updated>2015-12-11T16:17:17-07:00</updated>
    <author>
      <name>Tyler Flint</name>
    </author>
    <content type="html">&lt;p&gt;These days, almost every modern web framework is embracing the ability to live reload the browser when a source file is modified. It’s a cool trend; one we happen to use daily on most of our web applications. Over the past 6 months we’ve been obsessed with figuring out how to develop an application using livereload in dev mode on nanobox. In the past couple of weeks, thanks in large part to &lt;a href="https://github.com/lyondhill"&gt;Lyon&lt;/a&gt;, we’ve made some great progress towards this goal and today we’re excited to release and demo this functionality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TLDR:&lt;/strong&gt; Livereload works on nanobox! Check it out in the demo &lt;a href="#video-demo"&gt;below&lt;/a&gt;. &lt;/p&gt;

&lt;h2 id="the-problem"&gt;The Problem&lt;/h2&gt;

&lt;p&gt;Generally, livereload (outside of nanobox) works by subscribing to an I/O event notification layer provided by the operating system kernel. The livereload library “watches” files and directories for changes, then waits for the event notification from the kernel indicating a file or directory has been modified. When a file is modified, certain hooks run which may re-compile code or generate static assets accordingly. The livereload server then informs the browser, connected over a websocket, that a file has been modified and the browser refreshes.&lt;/p&gt;

&lt;p&gt;With nanobox, your application runs inside of a virtual machine (VM), and the source code is mounted inside. Livereload functionality breaks because the livereload server subscribes to events on the OS of the guest VM, but changes to the source code are made on the OS of the host machine. While the changes to the files are reflected inside the VM via the mount, the change event is triggered on the host OS, not on the guest OS. Thus, changes are not broadcast and the livereload server never triggers a re-compile and browser refresh.&lt;/p&gt;

&lt;h2 id="the-solution"&gt;The Solution&lt;/h2&gt;

&lt;p&gt;Our initial instinct, after having spent the past year in kernel development on illumos, was to try to modify the behavior of NFS and the VirtualBox fs driver behavior to replicate events from the host on the client OS. This effort didn’t make it far, as it proved to be a major undertaking without any guarantee that our work would be accepted by the vendors who maintain these projects. &lt;/p&gt;

&lt;p&gt;Instead, we took a step back and realized we could accomplish the goal in a much less obtrusive manner. When you run &lt;code&gt;nanobox dev&lt;/code&gt;, a watcher thread (go routine if you want to be technical about it) subscribes to the kernel event notification layer and waits to be informed of changes to the source code. When a change to a file or directory is triggered, the watcher thread connects to the nanobox-server daemon inside the VM and relays the event. The nanobox-server daemon then touches the file inside the VM, which ultimately forces a propagation of the event to the livereload server. &lt;/p&gt;

&lt;p&gt;It took a lot of iterations to flesh out the bugs and required a major refactor to handle tens of thousands of file change events per second. We’re excited to say that it’s now complete, stable, and working quite well! Your application doesn’t need to change or do anything special. The entire I/O event propagation and relay system is completely transparent to the application and the nanobox user.&lt;/p&gt;

&lt;p&gt;I created a short demo that demonstrates this process. Enjoy!&lt;/p&gt;

&lt;div class="video" id="video-demo"&gt;
  &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Donrr7YXkak?rel=0&amp;amp;showinfo=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="contributor-love"&gt;Contributor Love&lt;/h2&gt;

&lt;p&gt;Special thanks to all those who contributed to Nanobox &amp;amp; Nanopack projects this week. If we missed you, let us know and we&amp;#39;ll be sure to get you in next week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/Flat"&gt;Flat&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
- Fixed some typos in engine publishing&lt;br&gt;
- Made the update process more stable&lt;br&gt;
- Helped work through the windows update process  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/alytvynov"&gt;alytvynov&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
- Fixed scribble usage on Yoke  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/mattn"&gt;mattn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
- Helped us identify and understand proxy situations  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Walther Diechmann&lt;/strong&gt;&lt;br&gt;
- Helped identify LAN networking issues&lt;br&gt;
- Spurred a discussion that produced a plausible feature for bridge networking  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/Andrew-College"&gt;Andrew-College&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
- Identified a missing shared library in Oracle Java package  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/fnmunhoz"&gt;fnmunhoz&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
- Identified incorrect ruby_runtime cofigurations and helped confirm a fix  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/ehsanminachi"&gt;ehsanminachi&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
- Helped identify specific yoke scenarios for documentation  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/imkheong"&gt;imkheong&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
- Working to identify windows-specific Vagrantfile generation syntax errors  &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Vision of Nanobox</title>
    <link rel="alternate" href="http://blog.nanobox.io/the-vision-of-nanobox/"/>
    <id>http://blog.nanobox.io/the-vision-of-nanobox/</id>
    <published>2015-12-04T14:08:00-07:00</published>
    <updated>2015-12-04T15:51:29-07:00</updated>
    <author>
      <name>Tyler Flint</name>
    </author>
    <content type="html">&lt;p&gt;As Nanobox has received a lot of attention over the last few weeks, we have felt the need to externalize our vision for the future of Nanobox. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TLDR:&lt;/strong&gt; Three guiding principles in the development of Nanobox: zero configuration, team-based workflow, and intuitive infrastructure management.&lt;/p&gt;

&lt;h2 id="our-target-users"&gt;Our Target Users&lt;/h2&gt;

&lt;p&gt;Nanobox was designed to solve environment-specific problems for application developers. We realize not everyone will want or need to use Nanobox, and that’s ok. Specifically, we’re in the business of eliminating the overhead of environment setup and configuration from application developers. &lt;/p&gt;

&lt;h2 id="our-vision"&gt;Our Vision&lt;/h2&gt;

&lt;p&gt;Although Nanobox can be used in a variety of ways, all future development will be focused on providing application developers with a streamlined workflow through the following guiding principles:&lt;/p&gt;

&lt;h3 id="zero-configuration"&gt;Zero Configuration&lt;/h3&gt;

&lt;p&gt;The ultimate goal of Nanobox is to make provisioning development and production environments as easy and seamless as possible. Nanobox will make opinionated, best-practice decisions on your behalf to setup your environment, leaving you to just write your application.&lt;/p&gt;

&lt;p&gt;It can be a real challenge to build a local dev environment that matches (or even gets close to) your production environment. Configuration of each can be daunting. Nanobox aims to automate this process by both detecting the needs of your application, then provisioning and configuring your environment to suit.&lt;/p&gt;

&lt;p&gt;The bulk of automation happens through &lt;a href="https://docs.nanobox.io/engines/"&gt;Engines&lt;/a&gt;. Engines are what “sniff” your app’s codebase and configure the environment to match your needs. The current library of engines is still in its infancy, but as more devs contribute new language engines and framework-specific engines, Nanobox’s ability to accurately detect and configure your environment will improve.&lt;/p&gt;

&lt;h4 id="you’re-still-in-control"&gt;You’re Still in Control&lt;/h4&gt;

&lt;p&gt;We know the term “zero configuration” and the “magic” associated with automation scares some. While automation and a zero-configuration platform is our goal, know that you will always have the ability to custom-configure your environment through a &lt;a href="https://docs.nanobox.io/boxfile/"&gt;Boxfile&lt;/a&gt; or through &lt;a href="https://desktop.nanobox.io/engine-dev/"&gt;building a custom engine&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="team-based-workflow"&gt;Team-Based Workflow&lt;/h3&gt;

&lt;p&gt;Adding a new developer to a project  typically involves a few hours, if not days, of getting their local workstation setup, granting access and permissions on all the necessary project dependencies, then troubleshooting the idiosyncrasies of their workstation. &lt;/p&gt;

&lt;p&gt;With Nanobox desktop, all that would be involved is granting the user access to the codebase, having them clone it to their local machine, then running &lt;code&gt;nanobox dev&lt;/code&gt;. Everything the app needs to run is included in the repo. Once running, the environment is housed inside of an isolated Virtual Machine (VM) and is identical to any other collaborators’ running the same app using Nanobox.&lt;/p&gt;

&lt;p&gt;This is just one example of how Nanobox hopes to streamline collaborative development. &lt;a href="https://nanobox.io/cloud/"&gt;Nanobox Cloud&lt;/a&gt; will introduce a completely new team-based workflow for production apps. Stay tuned...&lt;/p&gt;

&lt;h3 id="intuitive-management"&gt;Intuitive Management&lt;/h3&gt;

&lt;p&gt;With Nanobox Desktop, we’ve invested a large amount of time and effort into making the process as simple and intuitive as possible. A single command, ‘nanobox dev’, is the only requirement for building a fully-virtualized development environment. All decisions have been and will be heavily geared towards keeping the process simple. &lt;/p&gt;

&lt;p&gt;Again, keep your eye out for Nanobox Cloud. The release will introduce a new approach to managing production infrastructure. &lt;/p&gt;

&lt;hr&gt;

&lt;h2 id="contributor-love"&gt;Contributor Love&lt;/h2&gt;

&lt;p&gt;Today we’re starting what we’d like to be a weekly tradition. We just want to recognize and thank those who have contributed to Nanobox and Nanopack projects in the past week. We’ll try our best to mention everyone who has contributed, but we may miss some. If you have contributed and we’ve missed you, please know how grateful we are and we’ll try to get you in next week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/harobed"&gt;harobed&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
• Helped to identify many issues in Nanobox&lt;br&gt;
• Helped to identify critical issues in the &lt;a href="https://engines.nanobox.io/releases/00d59bc3-7943-4082-97b8-44be36055f4b"&gt;Python Engine&lt;/a&gt;&lt;br&gt;
• Provided a &lt;a href="https://github.com/nanobox-io/nanobox-python-sample"&gt;sample Python app&lt;/a&gt; for testing the Python engine.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/mattn"&gt;mattn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
• Fixed an issue where Windows wasn’t properly checking if VirtualBox was installed.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/dsandstrom"&gt;dsandstrom&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
• Identified a bug in the Nanobox CLI that prevented the &lt;code&gt;.ssh&lt;/code&gt; directory from being mounted correctly.&lt;br&gt;
• Identified 404 pages on the Nanobox Desktop site.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/wdiechmann"&gt;wdiechmann&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
• Helped to find a bug in the ruby engine that prevented data services in the Boxfile from being recognized.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/audieleon"&gt;audieleon&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
• Helped to identify a bug where &lt;code&gt;nanobox dev&lt;/code&gt; would fail if the user’s &lt;code&gt;.ssh&lt;/code&gt; directory wasn’t in the user’s home directory.&lt;br&gt;
• Helped to identify a bug where &lt;code&gt;nanobox dev&lt;/code&gt; fails if NFS and it’s dependencies are not installed on the user system.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/vahagnaharonian"&gt;vahagnaharonian&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
• Fixed the password prompt in the Nanobox Mac installer&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Thanksgiving Update</title>
    <link rel="alternate" href="http://blog.nanobox.io/thanksgiving-update/"/>
    <id>http://blog.nanobox.io/thanksgiving-update/</id>
    <published>2015-11-25T11:49:00-07:00</published>
    <updated>2015-12-04T14:13:08-07:00</updated>
    <author>
      <name>Scott Anderson</name>
    </author>
    <content type="html">&lt;p&gt;Tomorrow is Thanksgiving here in the U.S. and we just wanted to give you a quick update on the progress we’ve made over the last week. Due to &lt;a href="/3-projects-in-2-days-trend-on-hacker-news-github/"&gt;Nanobox and Nanopack projects trending on Hacker News and Github&lt;/a&gt;, progress on these projects has sped up considerably; in large part due to the contributions from you, the community, in the form of issues and pull requests. Thank you so much and keep them coming!&lt;/p&gt;

&lt;h2 id="important-broken-update-command"&gt;&lt;strong&gt;&lt;em&gt;Important:&lt;/em&gt;&lt;/strong&gt; Broken Update Command&lt;/h2&gt;

&lt;p&gt;Just as the word began to spread about Nanobox, we found a bug in the Nanobox updater that prevented it from working correctly. This bug was in v0.16.8 and has now been fixed. However, because it was in the updater, if you’re currently running v0.16.8, the &lt;code&gt;update&lt;/code&gt; command can’t be used to pull the fix in. To check which version you have installed, run:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;nanobox -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are currently running 0.16.8, you’ll need to download and re-install the most recent version of the Nanobox binary (found on our &lt;a href="https://desktop.nanobox.io/downloads/"&gt;downloads page&lt;/a&gt;). Once installed, run the following commands in each of your Nanobox apps to ensure everything is up to date.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;nanobox update
&lt;span class="gp"&gt;$ &lt;/span&gt;nanobox reload
&lt;span class="gp"&gt;$ &lt;/span&gt;nanobox update-images
&lt;span class="gp"&gt;$ &lt;/span&gt;nanobox dev --rebuild
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="engine-updates-galore"&gt;Engine Updates Galore&lt;/h2&gt;

&lt;p&gt;We’ve been hard at work creating and updating engines to expand the library of languages and frameworks. We’ve been &lt;em&gt;happily&lt;/em&gt; overwhelmed with issue submissions, bug-fixing pull requests, and community members volunteering time &amp;amp; knowledge to help build fully-functional engines.&lt;/p&gt;

&lt;p&gt;If you’d like to help contribute to an engine, we’ve posted a list of questions in each to help identify exactly what the engine needs. We’ve already received some much appreciated feedback, but would love more. Here’s links to the Github issues that house the list of questions for each project:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nanobox-io/nanobox-engine-python/issues/4"&gt;Python&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-django/issues/1"&gt;Django&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-golang/issues/5"&gt;Go&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-elixir/issues/2"&gt;Elixir&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-java/issues/5"&gt;Java&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-scala/issues/2"&gt;Scala&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-clojure/issues/1"&gt;Clojure&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-nodejs/issues/7"&gt;Node.js&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-perl/issues/1"&gt;Perl&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-c/issues/1"&gt;C/C++&lt;/a&gt;  &lt;/p&gt;

&lt;h2 id="windows-compatibility"&gt;Windows Compatibility&lt;/h2&gt;

&lt;p&gt;Most of the testing for Nanobox prior to this week was done in OSX and Linux, leaving significant bugs in the Windows version. Thanks to those of you using Windows and the issues/pull requests you’ve submitted, we’ve been able to iron out the majority of the issues that have prevented Nanobox from working properly in Windows. The remaining “deal-breaking” bugs should be resolved by early next week.&lt;/p&gt;

&lt;h2 id="updated-installers"&gt;Updated Installers&lt;/h2&gt;

&lt;p&gt;All Nanobox installers have been updated, with most of the effort going into the Linux installers. These updates fix issues discovered as the installers have been used across many different OSs and OS versions.&lt;/p&gt;

&lt;h2 id="prepping-updated-packages-for-nanobox-pkgsrc"&gt;Prepping Updated Packages for Nanobox pkgsrc&lt;/h2&gt;

&lt;p&gt;We’re in the process of preparing new packages to be included in the &lt;a href="http://pkgsrc.nanobox.io/nanobox/base/Linux/"&gt;Nanobox pkgsrc&lt;/a&gt;. These are packages/binaries available for use in engines. Updates will include newer versions of packages as well as minor/patch versions that fill in the gaps between existing minor/patch versions and should be available sometime next week.&lt;/p&gt;

&lt;h2 id="updates-to-nanopack-projects"&gt;Updates to Nanopack Projects&lt;/h2&gt;

&lt;p&gt;After open-sourcing the &lt;a href="http://nanopack.io"&gt;Nanopack projects&lt;/a&gt;, we’ve received significant contributions to projects such as &lt;a href="https://github.com/nanopack/mist"&gt;Mist&lt;/a&gt; and &lt;a href="https://github.com/nanopack/yoke"&gt;Yoke&lt;/a&gt;. These have helped to speed the development of each of these projects. Special thanks to &lt;a href="https://github.com/saromanov"&gt;saromanov&lt;/a&gt;, &lt;a href="https://github.com/hypersleep"&gt;hypersleep&lt;/a&gt;, &lt;a href="https://github.com/rhcarvalho"&gt;rhcarvalho&lt;/a&gt;, &lt;a href="https://github.com/nsorger"&gt;nsorger&lt;/a&gt;, &lt;a href="https://github.com/khink"&gt;khink&lt;/a&gt;, &lt;a href="https://github.com/feuersteinacc01"&gt;feuersteinacc01&lt;/a&gt;, &lt;a href="https://github.com/cvan"&gt;cvan&lt;/a&gt;, &lt;a href="https://github.com/jshawl"&gt;jshawl&lt;/a&gt;, and any others that have contributed that I may have missed. &lt;/p&gt;

&lt;h2 id="happy-thanksgiving"&gt;Happy Thanksgiving&lt;/h2&gt;

&lt;p&gt;As tomorrow we’ll be celebrating Thanksgiving, for the rest of this week, our team will be spending time with our families. We’ll still likely respond to issues and pull requests (it’s hard for us to stay away), but responses may come slower than they have. For those of you who celebrate it, Happy Thanksgiving! Come Monday, we’ll be back with full stomachs and fresh minds.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>3 Projects in 2 Days Trend on Hacker News &amp; Github</title>
    <link rel="alternate" href="http://blog.nanobox.io/3-projects-in-2-days-trend-on-hacker-news-github/"/>
    <id>http://blog.nanobox.io/3-projects-in-2-days-trend-on-hacker-news-github/</id>
    <published>2015-11-18T11:47:00-07:00</published>
    <updated>2015-11-18T12:03:46-07:00</updated>
    <author>
      <name>Scott Anderson</name>
    </author>
    <content type="html">&lt;p&gt;It has been a crazy and exciting week here at Nanobox. Last Friday we &lt;a href="https://blog.nanobox.io/nanopack-a-new-vision-for-automated-infrastructure/"&gt;announced our open-source initiative&lt;/a&gt; and released our collection of open source projects under the &lt;a href="http://nanopack.io"&gt;Nanopack&lt;/a&gt; organization. Little did we know the snowball effect these projects would have on spreading the word about Nanobox.&lt;/p&gt;

&lt;p&gt;In the last two days, three projects, &lt;a href="https://github.com/nanopack/mist"&gt;Mist&lt;/a&gt;, &lt;a href="https://github.com/nanopack/yoke"&gt;Yoke&lt;/a&gt;, and &lt;a href="https://desktop.nanobox.io"&gt;Nanobox&lt;/a&gt;, have hit the front page of Hacker News and are trending on Github. In fact, the Nanopack organization is currently the #4 global trending developer and the #2 trending Go developer on Github.&lt;/p&gt;

&lt;p class="caption"&gt;#1, #3, and #4 Trending Go Projects on Github&lt;/p&gt;

&lt;p&gt;&lt;img alt="&amp;quot;Trending Go Projects on Github&amp;quot;" src="/images/gh-trending-go-projects-3c373048.png" /&gt;&lt;/p&gt;

&lt;p class="caption"&gt;#4 Trending Worldwide Dev on Github&lt;/p&gt;

&lt;p&gt;&lt;img alt="&amp;quot;Trending Worldwide dev on Github&amp;quot;" src="/images/gh-trending-devs-19ca1595.png" /&gt;&lt;/p&gt;

&lt;p class="caption"&gt;#2 Trending Go Dev on Github&lt;/p&gt;

&lt;p&gt;&lt;img alt="&amp;quot;Trending Go Devs on Github&amp;quot;" src="/images/gh-trending-go-devs-96facaa8.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Crazy.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let me just say that nobody in our team ever expected this. Nanobox and Nanopack projects have been in the works for a while and we just started to noise these projects around the development community. The attention these projects have garnered and how they have resonated with developers has been exciting, humbling, overwhelming, and validating.&lt;/p&gt;

&lt;h2 id="immediate-community-involvement"&gt;Immediate Community Involvement&lt;/h2&gt;

&lt;p&gt;Internally, we posted a few project links on &lt;a href="https://news.ycombinator.com"&gt;Hacker News&lt;/a&gt;, but our posts never received much traction. It wasn’t until members of the community posted links to our projects that they really took off. Since then, our inboxes have been filled with pull requests, issue submissions, and devs volunteering their efforts to help build &lt;a href="https://engines.nanobox.io"&gt;Nanobox Engines&lt;/a&gt; and even platform integration adapters.&lt;/p&gt;

&lt;p&gt;I speak collectively for our team when I give a heartfelt &lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One goal of open-sourcing our projects has been to both build and contribute to a community that solves real-world problems developers face everyday. We are a relatively small team and have been looking at ways to speed up the development of these projects as well as getting outside perspective. Both the sharing of links by you, the community members, and the help we’ve received on projects has been overwhelming and very, very appreciated.&lt;/p&gt;

&lt;h2 id="so-what-now"&gt;So What Now?&lt;/h2&gt;

&lt;p&gt;Obviously we want to ride this wave of momentum. We feel the best way to do that is through community engagement. Much of our effort in the coming weeks will be focused on working through all the pull requests and issue submissions, providing detailed documentation, and helping users really feel at home with Nanobox and other projects. We’ve already begun merging pull requests and are currently working through many of the issues submitted by the community.&lt;/p&gt;

&lt;p&gt;Our main focus is on getting &lt;a href="https://desktop.nanobox.io/"&gt;Nanobox Desktop&lt;/a&gt; stable and out of alpha as well as continuing to build the library of Nanobox Engines. Engines are where you can really get involved. Anybody can build and publish engines that can then be used by other devs (more info in the &lt;a href="https://docs.nanobox.io/engines/"&gt;Nanobox documentation&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Shameless Plug:&lt;/em&gt; We’d also love to speak at conferences. If you’re a conference organizer and would like us to be involved, by all means, reach out.&lt;/p&gt;

&lt;h2 id="thank-you-thank-you-thank-you"&gt;Thank You, Thank You, Thank You&lt;/h2&gt;

&lt;p&gt;Again, we can’t say thank you enough. This really has been a crazy couple of days and we’re excited for what the community has done and for what the future holds.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Nanopack - A New Vision for Automated Infrastructure</title>
    <link rel="alternate" href="http://blog.nanobox.io/nanopack-a-new-vision-for-automated-infrastructure/"/>
    <id>http://blog.nanobox.io/nanopack-a-new-vision-for-automated-infrastructure/</id>
    <published>2015-11-13T13:03:00-07:00</published>
    <updated>2015-12-04T14:09:47-07:00</updated>
    <author>
      <name>Tyler Flint</name>
    </author>
    <content type="html">&lt;p&gt;Today we’d like to introduce &lt;a href="http://nanopack.io"&gt;Nanopack&lt;/a&gt;, our vision for a fully-automated, API-driven infrastructure. Five years ago, we launched &lt;a href="https://pagodabox.io"&gt;Pagoda Box&lt;/a&gt; with a mission to empower application developers by eliminating systems administration. The challenge for both Pagoda Box and Nanobox is that we need the ability to manipulate, configure, and build infrastructure in real-time via remote APIs.&lt;/p&gt;

&lt;h2 id="the-problem-in-the-wild"&gt;The Problem in the Wild&lt;/h2&gt;

&lt;p&gt;Let me provide a real scenario we dealt with early on with Pagoda Box that clearly illustrates the problem: Pagoda Box allows a developer to add SSL/TLS encryption to their app from the app dashboard. After the cert is created, an Nginx web server needed to be re-configured for the app. This process entailed SSH’ing into the web server machines, updating the configuration file, then reloading the nginx process. While this process was automated, it became clear that it was brittle, unstable, and would not scale. &lt;/p&gt;

&lt;p&gt;As we were reaching critical mass and struggling to deal with scale and growth, we took a step back to re-assess. We looked at this and other processes then realized the solution was clear: we needed to develop and manage our infrastructure like we do our apps; with direct API-access at the source for real-time configuration. Instead of logging into machines, updating config files, and reloading services, we needed to expose the configuration of these services via an API. Instead of using nginx for SSL termination, we built a lightweight, API-driven SSL terminator that enabled us to apply a TLS/SSL cert in real-time, with a single API call.&lt;/p&gt;

&lt;h2 id="sharing-our-philosophy-amp-our-projects"&gt;Sharing Our Philosophy &amp;amp; Our Projects&lt;/h2&gt;

&lt;p&gt;Over the years, this pattern became our guiding philosophy. Today, we’d like to share that philosophy, as well as all of our internal components and services for nanobox cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://nanopack.io" style="max-width: 10em; margin: 0 auto; display: block;"&gt;
  &lt;img src="/images/nanopack-logo.svg"&gt;
&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Nanopack is a collection of open source projects that embrace the Unix philosophy of a singular purpose. The collective result is left to the imagination of the consumer, likely dictated by the needs of a project. We value collaboration and recognize there are other organizations and efforts that are inline with our vision. &lt;/p&gt;

&lt;p&gt;We need your help to realize this vision. If you’re a systems administrator or a devops person, we need your assistance to identify scenarios and vet potential solutions. If you’re a programmer, we have lots of code that needs to be written. We need help documenting and spreading the word. Get more inforamtion about Nanopack at &lt;a href="http://nanopack.io"&gt;nanopack.io&lt;/a&gt; and get in touch on &lt;a href="https://github.com/nanopack"&gt;Github&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
