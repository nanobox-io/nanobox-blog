<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nanobox Blog</title>
  <subtitle>The inner-workings of the brains behind Nanobox</subtitle>
  <id>http://blog.nanobox.io/</id>
  <link href="http://blog.nanobox.io/"/>
  <link href="http://blog.nanobox.io/feed.xml" rel="self"/>
  <updated>2015-11-25T11:49:00-07:00</updated>
  <entry>
    <title>Thanksgiving Update</title>
    <link rel="alternate" href="http://blog.nanobox.io/thanksgiving-update/"/>
    <id>http://blog.nanobox.io/thanksgiving-update/</id>
    <published>2015-11-25T11:49:00-07:00</published>
    <updated>2015-11-25T11:55:53-07:00</updated>
    <author>
      <name>Scott Anderson</name>
    </author>
    <content type="html">&lt;p&gt;Tomorrow is Thanksgiving here in the U.S. and we just wanted to give you a quick update on the progress we’ve made over the last week. Due to &lt;a href="/3-projects-in-2-days-trend-on-hacker-news-github/"&gt;Nanobox and Nanopack projects trending on Hacker News and Github&lt;/a&gt;, progress on these projects has sped up considerably; in large part due to the contributions from you, the community, in the form of issues and pull requests. Thank you so much and keep them coming!&lt;/p&gt;

&lt;h2 id="important-broken-update-command"&gt;&lt;strong&gt;&lt;em&gt;Important:&lt;/em&gt;&lt;/strong&gt; Broken Update Command&lt;/h2&gt;

&lt;p&gt;Just as the word began to spread about Nanobox, we found a bug in the Nanobox updater that prevented it from working correctly. This bug was in v0.16.8 and has now been fixed. However, because it was in the updater, if you’re currently running v0.16.8, the &lt;code&gt;update&lt;/code&gt; command can’t be used to pull the fix in. To check which version you have installed, run:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;nanobox -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are currently running 0.16.8, you’ll need to download and re-install the most recent version of the Nanobox binary (found on our &lt;a href="https://desktop.nanobox.io/downloads/"&gt;downloads page&lt;/a&gt;). Once installed, run the following commands in each of your Nanobox apps to ensure everything is up to date.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;nanobox update
&lt;span class="gp"&gt;$ &lt;/span&gt;nanobox reload
&lt;span class="gp"&gt;$ &lt;/span&gt;nanobox update-images
&lt;span class="gp"&gt;$ &lt;/span&gt;nanobox dev --rebuild
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="engine-updates-galore"&gt;Engine Updates Galore&lt;/h2&gt;

&lt;p&gt;We’ve been hard at work creating and updating engines to expand the library of languages and frameworks. We’ve been &lt;em&gt;happily&lt;/em&gt; overwhelmed with issue submissions, bug-fixing pull requests, and community members volunteering time &amp;amp; knowledge to help build fully-functional engines.&lt;/p&gt;

&lt;p&gt;If you’d like to help contribute to an engine, we’ve posted a list of questions in each to help identify exactly what the engine needs. We’ve already received some much appreciated feedback, but would love more. Here’s links to the Github issues that house the list of questions for each project:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nanobox-io/nanobox-engine-python/issues/4"&gt;Python&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-django/issues/1"&gt;Django&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-golang/issues/5"&gt;Go&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-elixir/issues/2"&gt;Elixir&lt;/a&gt;  &lt;a href="https://github.com/nanobox-io/nanobox-engine-java/issues/5"&gt;Java&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-scala/issues/2"&gt;Scala&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-clojure/issues/1"&gt;Clojure&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-nodejs/issues/7"&gt;Node.js&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-perl/issues/1"&gt;Perl&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-c/issues/1"&gt;C/C++&lt;/a&gt;  &lt;/p&gt;

&lt;h2 id="windows-compatibility"&gt;Windows Compatibility&lt;/h2&gt;

&lt;p&gt;Most of the testing for Nanobox prior to this week was done in OSX and Linux, leaving significant bugs in the Windows version. Thanks to those of you using Windows and the issues/pull requests you’ve submitted, we’ve been able to iron out the majority of the issues that have prevented Nanobox from working properly in Windows. The remaining “deal-breaking” bugs should be resolved by early next week.&lt;/p&gt;

&lt;h2 id="updated-installers"&gt;Updated Installers&lt;/h2&gt;

&lt;p&gt;All Nanobox installers have been updated, with most of the effort going into the Linux installers. These updates fix issues discovered as the installers have been used across many different OSs and OS versions.&lt;/p&gt;

&lt;h2 id="prepping-updated-packages-for-nanobox-pkgsrc"&gt;Prepping Updated Packages for Nanobox pkgsrc&lt;/h2&gt;

&lt;p&gt;We’re in the process of preparing new packages to be included in the &lt;a href="http://pkgsrc.nanobox.io/nanobox/base/Linux/"&gt;Nanobox pkgsrc&lt;/a&gt;. These are packages/binaries available for use in engines. Updates will include newer versions of packages as well as minor/patch versions that fill in the gaps between existing minor/patch versions and should be available sometime next week.&lt;/p&gt;

&lt;h2 id="updates-to-nanopack-projects"&gt;Updates to Nanopack Projects&lt;/h2&gt;

&lt;p&gt;After open-sourcing the &lt;a href="http://nanopack.io"&gt;Nanopack projects&lt;/a&gt;, we’ve received significant contributions to projects such as &lt;a href="https://github.com/nanopack/mist"&gt;Mist&lt;/a&gt; and &lt;a href="https://github.com/nanopack/yoke"&gt;Yoke&lt;/a&gt;. These have helped to speed the development of each of these projects. Special thanks to &lt;a href="https://github.com/saromanov"&gt;saromanov&lt;/a&gt;, &lt;a href="https://github.com/hypersleep"&gt;hypersleep&lt;/a&gt;, &lt;a href="https://github.com/rhcarvalho"&gt;rhcarvalho&lt;/a&gt;, &lt;a href="https://github.com/nsorger"&gt;nsorger&lt;/a&gt;, &lt;a href="https://github.com/khink"&gt;khink&lt;/a&gt;, &lt;a href="https://github.com/feuersteinacc01"&gt;feuersteinacc01&lt;/a&gt;, &lt;a href="https://github.com/cvan"&gt;cvan&lt;/a&gt;, &lt;a href="https://github.com/jshawl"&gt;jshawl&lt;/a&gt;, and any others that have contributed that I may have missed. &lt;/p&gt;

&lt;h2 id="happy-thanksgiving"&gt;Happy Thanksgiving&lt;/h2&gt;

&lt;p&gt;As tomorrow we’ll be celebrating Thanksgiving, for the rest of this week, our team will be spending time with our families. We’ll still likely respond to issues and pull requests (it’s hard for us to stay away), but responses may come slower than they have. For those of you who celebrate it, Happy Thanksgiving! Come Monday, we’ll be back with full stomachs and fresh minds.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>3 Projects in 2 Days Trend on Hacker News &amp; Github</title>
    <link rel="alternate" href="http://blog.nanobox.io/3-projects-in-2-days-trend-on-hacker-news-github/"/>
    <id>http://blog.nanobox.io/3-projects-in-2-days-trend-on-hacker-news-github/</id>
    <published>2015-11-18T11:47:00-07:00</published>
    <updated>2015-11-18T12:03:46-07:00</updated>
    <author>
      <name>Scott Anderson</name>
    </author>
    <content type="html">&lt;p&gt;It has been a crazy and exciting week here at Nanobox. Last Friday we &lt;a href="https://blog.nanobox.io/nanopack-a-new-vision-for-automated-infrastructure/"&gt;announced our open-source initiative&lt;/a&gt; and released our collection of open source projects under the &lt;a href="http://nanopack.io"&gt;Nanopack&lt;/a&gt; organization. Little did we know the snowball effect these projects would have on spreading the word about Nanobox.&lt;/p&gt;

&lt;p&gt;In the last two days, three projects, &lt;a href="https://github.com/nanopack/mist"&gt;Mist&lt;/a&gt;, &lt;a href="https://github.com/nanopack/yoke"&gt;Yoke&lt;/a&gt;, and &lt;a href="https://desktop.nanobox.io"&gt;Nanobox&lt;/a&gt;, have hit the front page of Hacker News and are trending on Github. In fact, the Nanopack organization is currently the #4 global trending developer and the #2 trending Go developer on Github.&lt;/p&gt;

&lt;p class="caption"&gt;#1, #3, and #4 Trending Go Projects on Github&lt;/p&gt;

&lt;p&gt;&lt;img alt="&amp;quot;Trending Go Projects on Github&amp;quot;" src="/images/gh-trending-go-projects-3c373048.png" /&gt;&lt;/p&gt;

&lt;p class="caption"&gt;#4 Trending Worldwide Dev on Github&lt;/p&gt;

&lt;p&gt;&lt;img alt="&amp;quot;Trending Worldwide dev on Github&amp;quot;" src="/images/gh-trending-devs-19ca1595.png" /&gt;&lt;/p&gt;

&lt;p class="caption"&gt;#2 Trending Go Dev on Github&lt;/p&gt;

&lt;p&gt;&lt;img alt="&amp;quot;Trending Go Devs on Github&amp;quot;" src="/images/gh-trending-go-devs-96facaa8.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Crazy.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let me just say that nobody in our team ever expected this. Nanobox and Nanopack projects have been in the works for a while and we just started to noise these projects around the development community. The attention these projects have garnered and how they have resonated with developers has been exciting, humbling, overwhelming, and validating.&lt;/p&gt;

&lt;h2 id="immediate-community-involvement"&gt;Immediate Community Involvement&lt;/h2&gt;

&lt;p&gt;Internally, we posted a few project links on &lt;a href="https://news.ycombinator.com"&gt;Hacker News&lt;/a&gt;, but our posts never received much traction. It wasn’t until members of the community posted links to our projects that they really took off. Since then, our inboxes have been filled with pull requests, issue submissions, and devs volunteering their efforts to help build &lt;a href="https://engines.nanobox.io"&gt;Nanobox Engines&lt;/a&gt; and even platform integration adapters.&lt;/p&gt;

&lt;p&gt;I speak collectively for our team when I give a heartfelt &lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One goal of open-sourcing our projects has been to both build and contribute to a community that solves real-world problems developers face everyday. We are a relatively small team and have been looking at ways to speed up the development of these projects as well as getting outside perspective. Both the sharing of links by you, the community members, and the help we’ve received on projects has been overwhelming and very, very appreciated.&lt;/p&gt;

&lt;h2 id="so-what-now"&gt;So What Now?&lt;/h2&gt;

&lt;p&gt;Obviously we want to ride this wave of momentum. We feel the best way to do that is through community engagement. Much of our effort in the coming weeks will be focused on working through all the pull requests and issue submissions, providing detailed documentation, and helping users really feel at home with Nanobox and other projects. We’ve already begun merging pull requests and are currently working through many of the issues submitted by the community.&lt;/p&gt;

&lt;p&gt;Our main focus is on getting &lt;a href="https://desktop.nanobox.io/"&gt;Nanobox Desktop&lt;/a&gt; stable and out of alpha as well as continuing to build the library of Nanobox Engines. Engines are where you can really get involved. Anybody can build and publish engines that can then be used by other devs (more info in the &lt;a href="https://docs.nanobox.io/engines/"&gt;Nanobox documentation&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Shameless Plug:&lt;/em&gt; We’d also love to speak at conferences. If you’re a conference organizer and would like us to be involved, by all means, reach out.&lt;/p&gt;

&lt;h2 id="thank-you-thank-you-thank-you"&gt;Thank You, Thank You, Thank You&lt;/h2&gt;

&lt;p&gt;Again, we can’t say thank you enough. This really has been a crazy couple of days and we’re excited for what the community has done and for what the future holds.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Nanopack - A New Vision for Automated Infrastructure</title>
    <link rel="alternate" href="http://blog.nanobox.io/nanopack-a-new-vision-for-automated-infrastructure/"/>
    <id>http://blog.nanobox.io/nanopack-a-new-vision-for-automated-infrastructure/</id>
    <published>2015-11-13T13:03:00-07:00</published>
    <updated>2015-11-13T13:15:17-07:00</updated>
    <author>
      <name>Tyler Flint</name>
    </author>
    <content type="html">&lt;p&gt;Today we’d like to introduce &lt;a href="http://nanopack.io"&gt;Nanopack&lt;/a&gt;, our vision for a fully-automated, API-driven infrastructure. Five years ago, we launched &lt;a href="https://pagodabox.io"&gt;Pagoda Box&lt;/a&gt; with a mission to empower application developers by eliminating systems administration. The challenge for both Pagoda Box and Nanobox is that we need the ability to manipulate, configure, and build infrastructure in real-time via remote APIs.&lt;/p&gt;

&lt;h2 id="the-problem-in-the-wild"&gt;The Problem in the Wild&lt;/h2&gt;

&lt;p&gt;Let me provide a real scenario we dealt with early on with Pagoda Box that clearly illustrates the problem: Pagoda Box allows a developer to add SSL/TLS encryption to their app from the app dashboard. After the cert is created, an Nginx web server needed to be re-configured for the app. This process entailed SSH’ing into the web server machines, updating the configuration file, then reloading the nginx process. While this process was automated, it became clear that it was brittle, unstable, and would not scale. &lt;/p&gt;

&lt;p&gt;As we were reaching critical mass and struggling to deal with scale and growth, we took a step back to re-assess. We looked at this and other processes then realized the solution was clear: we needed to develop and manage our infrastructure like we do our apps; with direct API-access at the source for real-time configuration. Instead of logging into machines, updating config files, and reloading services, we needed to expose the configuration of these services via an API. Instead of using nginx for SSL termination, we built a lightweight, API-driven SSL terminator that enabled us to apply a TLS/SSL cert in real-time, with a single API call.&lt;/p&gt;

&lt;h2 id="sharing-our-philosophy-amp-our-projects"&gt;Sharing Our Philosophy &amp;amp; Our Projects&lt;/h2&gt;

&lt;p&gt;Over the years, this pattern became our guiding philosophy. Today, we’d like to share that philosophy, as well as all of our internal components and services for nanobox cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://nanopack.io" style="max-width: 10em; margin: 0 auto; display: block;"&gt;
  &lt;img src="/images/nanopack-logo.svg"&gt;
&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Nanopack is a collection of open source projects that embrace the Unix philosophy of a singular purpose. The collective result is left to the imagination of the consumer, likely dictated by the needs of a project. We value collaboration and recognize there are other organizations and efforts that are inline with our vision. &lt;/p&gt;

&lt;p&gt;We need your help to realize this vision. If you’re a systems administrator or a devops person, we need your assistance to identify scenarios and vet potential solutions. If you’re a programmer, we have lots of code that needs to be written. We need help documenting and spreading the word. Get more inforamtion about Nanopack at &lt;a href="http://nanopack.io"&gt;nanopack.io&lt;/a&gt; and get in touch on &lt;a href="https://github.com/nanopack"&gt;Github&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>New Feature&amp;#58; Engine Overlays</title>
    <link rel="alternate" href="http://blog.nanobox.io/new-feature-engine-overlays/"/>
    <id>http://blog.nanobox.io/new-feature-engine-overlays/</id>
    <published>2015-11-06T12:01:00-07:00</published>
    <updated>2015-11-06T12:25:54-07:00</updated>
    <author>
      <name>Scott Anderson</name>
    </author>
    <content type="html">&lt;p&gt;Last week we set out to tackle the issue of importing functionality from one engine into another. The need for this feature became apparent as nearly every engine needed the option to run bower for front-end dependencies. Bower is an npm module and requires a node.js runtime. Although a node.js engine already exists that conditionally installs node, then runs a &lt;code&gt;bower install&lt;/code&gt; if a bower.json exists, we found ourselves duplicating this code and functionality across engines. Other scenarios such as a WordPress engine needing to import the existing logic from the &lt;a href="https://engines.nanobox.io/releases/9cfde7f2-44e8-45fe-80f7-800d6acf2b4b"&gt;php engine&lt;/a&gt; made the problem abundantly clear:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TLDR:&lt;/strong&gt; We needed a simple way to combine functionality from different engines.&lt;/p&gt;

&lt;h2 id="stacking-engines"&gt;Stacking Engines&lt;/h2&gt;

&lt;p&gt;Having spent much of our time in the past 3 years within the Illumos and SmartOS communities, we’ve seen first-hand how well overlaying files can work in a shell/config-centric world. Illumos uses this pattern as a way to create distributions, overriding core functionality and also extending behavior. &lt;/p&gt;

&lt;p&gt;The idea is simple: Stack the contents of an engine on top of another engine. One by one, the contents of the overlaid engines are layered on top of the previous engine. This means that new files are added and files with the same name are replaced. Though simple, the approach provides great flexibility.&lt;/p&gt;

&lt;h2 id="example"&gt;Example&lt;/h2&gt;

&lt;p&gt;To see how this feature can be put to use, let’s take a look at the &lt;a href="https://engines.nanobox.io/releases/67f616c1-91f1-4dae-83fc-b81b8fcf9e61"&gt;WordPress engine&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;First, the WordPress engine specifies in the Enginefile that it wants to overlay the php engine:&lt;/p&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;overlays&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;php&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The full Enginefile can be referenced here:&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-wordpress/blob/master/Enginefile"&gt;https://github.com/nanobox-io/nanobox-engine-wordpress/blob/master/Enginefile&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, the WordPress engine can source the bash scripts provided by the php engine:&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-wordpress/blob/master/lib/wordpress.sh#L5"&gt;https://github.com/nanobox-io/nanobox-engine-wordpress/blob/master/lib/wordpress.sh#L5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, the WordPress ‘prepare’ bin script can now call functions provided by the php engine:&lt;br&gt;
&lt;a href="https://github.com/nanobox-io/nanobox-engine-wordpress/blob/master/bin/prepare#L14-L24"&gt;https://github.com/nanobox-io/nanobox-engine-wordpress/blob/master/bin/prepare#L14-L24&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="making-engine-development-faster"&gt;Making Engine Development Faster&lt;/h2&gt;

&lt;p&gt;Engine overlays allow engine developers to include already established functionality into their own engines without having to duplicate code or fork existing engines. Framework maintainers can overlay a language-generic engine to lay the foundation for their application and only worry about functionality specific to their framework. In short, overlays keep you from having to do things that have already been done.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>This Week in Nanobox</title>
    <link rel="alternate" href="http://blog.nanobox.io/this-week-in-nanobox-10-30-15/"/>
    <id>http://blog.nanobox.io/this-week-in-nanobox-10-30-15/</id>
    <published>2015-10-30T16:38:00-06:00</published>
    <updated>2015-10-30T16:39:35-06:00</updated>
    <author>
      <name>Steve Domino</name>
    </author>
    <content type="html">&lt;p&gt;This week we&amp;#39;ve added some cool new features to &lt;a href="https://desktop.nanobox.io"&gt;Nanobox Desktop&lt;/a&gt; and have resolved a few issues.&lt;/p&gt;

&lt;h4 id="new-features"&gt;New Features:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Nanobox now generates dynamic SSH ports allowing you to now run multiple nanoboxes at the same time &lt;em&gt;(awesome)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;The way nanobox generates the dynamic IP for its private network is much smarter and greatly reduces the likelihood of conflicting IP’s.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="resolved-issues"&gt;Resolved Issues:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;vagrant.log&lt;/code&gt; and &lt;code&gt;server.log&lt;/code&gt; are now correctly generated inside the &amp;#39;app&amp;#39; folder (&lt;code&gt;~.nanobox/apps/&amp;lt;app-name&amp;gt;&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;An issue causing the VM to continuously suspend after a &amp;#39;nanobox reload&amp;#39; has been resolved.&lt;/li&gt;
&lt;li&gt;Fixed a race condition where nanobox was attempting to kill the docker DHCP server before it was available to kill, causing the VM to freeze.&lt;/li&gt;
&lt;li&gt;Fixed an issue where nanobox was &amp;#39;ping flooding&amp;#39; the server causing the server to die and the client (nanobox) to suspend the VM.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="whats-next-for-nanobox"&gt;Whats Next for Nanobox?&lt;/h2&gt;

&lt;h3 id="overlays"&gt;Overlays&lt;/h3&gt;

&lt;p&gt;The next big thing on our feature list is support for “overlays”; a quick way to combine functionality from different engines.&lt;/p&gt;

&lt;p&gt;The way an overlay works is it takes a list of &lt;a href="https://docs.nanobox.io/engines/"&gt;engines&lt;/a&gt; and overlays their functionality (files). For example, a Ruby on Rails (RoR) engine would overlay the NodeJS and Ruby engines with it&amp;#39;s own functionality. These overlays would allow the RoR engine to use things like Ruby and Bower.js without having to add them explicitly into the engine.&lt;/p&gt;

&lt;p&gt;This way, when there are updates to an overlay’d engine, the engine itself wouldn’t need to be updated. For example, if the PHP engine is updated, the Wordpress engine, which includes the PHP engine as an overlay, wouldn&amp;#39;t need to pull in those updates. It would simply get the updates once it&amp;#39;s compiled.&lt;/p&gt;

&lt;h3 id="upcoming-events"&gt;Upcoming Events&lt;/h3&gt;

&lt;p&gt;Nanobox will be presenting at the &amp;quot;NodeJS Ninjas&amp;quot; meetup group in SLC on Nov 18th at 6:00pm. Details can be found &lt;a href="http://www.meetup.com/utahnodejs/events/226098953/"&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Focus on Apps, Not Configuring Dev Environments</title>
    <link rel="alternate" href="http://blog.nanobox.io/auto-configure-virtual-development-environments/"/>
    <id>http://blog.nanobox.io/auto-configure-virtual-development-environments/</id>
    <published>2015-10-23T12:00:00-06:00</published>
    <updated>2015-10-23T13:35:49-06:00</updated>
    <author>
      <name>Tyler Flint</name>
    </author>
    <content type="html">&lt;p&gt;&lt;strong&gt;TLDR:&lt;/strong&gt; Introducing a better local development workflow. Watch the Demo.&lt;/p&gt;

&lt;div class="video" id="video-demo"&gt;
  &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/TV4iBxytfyE?rel=0&amp;amp;showinfo=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id="declutter-workstations-with-a-better-workflow"&gt;Declutter Workstations with a Better Workflow&lt;/h2&gt;

&lt;p&gt;We’re excited to announce the release of Nanobox Desktop, which automatically generates fully virtualized environments on your local workstation from a single command. Nanobox auto-detects the application type, provisions a virtual machine (VM), and creates all of the app’s related services inside the VM - all without complex manual configuration.&lt;/p&gt;

&lt;p&gt;Under the hood, Nanobox uses &lt;a href="https://www.virtualbox.org/"&gt;Virtualbox&lt;/a&gt; to create a VM for each app. It leverages &lt;a href="https://www.vagrantup.com"&gt;Vagrant&lt;/a&gt; for VM creation and &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; to “containerize” processes inside the VM. By cleanly isolating application environments, apps with all their dependencies can be managed simply, without cruft or workstation configuration. &lt;/p&gt;

&lt;h2 id="tap-into-community-expertise"&gt;Tap into Community Expertise&lt;/h2&gt;

&lt;p&gt;We can’t know everything required to configure all virtual development environments. Instead, we provide simple tools that promote a community-driven collection of specialized Engines which install runtimes, detect dependencies, and compile your codebase. By default, Nanobox pulls from this &lt;a href="https://engines.nanobox.io"&gt;catalogue of community-contributed engines&lt;/a&gt;. Anyone can add and use custom Engines with minimal effort.&lt;/p&gt;

&lt;h2 id="you’re-in-charge-of-the-automation"&gt;You’re in Charge of the Automation&lt;/h2&gt;

&lt;p&gt;While automated configuration might sound a bit scary, Nanobox ensures that you’re always in control. Adding a &lt;a href="https://docs.nanobox.io/boxfile/"&gt;Boxfile&lt;/a&gt; in the root of an application overrides or supplements the automated build. Boxfile configuration can be as simple as specifying a custom Engine or adding a Postgres service, or more complex, like choosing a specific Ruby runtime or enabling MySQL configuration settings.&lt;/p&gt;

&lt;p&gt;Need more control? Create a custom Engine and auto-configure even the nit-pickiest of development environments. &lt;/p&gt;

&lt;h2 id="getting-started"&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;Ultimately, you have to see it to believe it. You should check out the &lt;a href="#video-demo"&gt;video demo&lt;/a&gt;. If you’re too strapped for time to watch a 2 minute video, you’re spending too much time managing a cluttered local environment. &lt;a href="https://desktop.nanobox.io/downloads"&gt;Download Nanobox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We’d love to get your feedback or answer additional questions, so hop into our &lt;a href="https://webchat.freenode.net/?channels=nanobox"&gt;#nanobox IRC channel&lt;/a&gt; for a chat.&lt;/p&gt;
</content>
  </entry>
</feed>
